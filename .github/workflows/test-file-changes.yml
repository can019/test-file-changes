name: 'Jest'
on:
  push:
    branches:
      - 'develop'
  pull_request:
    branches:
      - 'develop'
      - 'migration'
      - 'main'
      - '**'
      # - '*'         # matches every branch that doesn't contain a '/'
      # - '*/*'       # matches every branch containing a single '/'
      # - '**'        # matches every branch
      # - '!master'   # excludes master

jobs:
  check-file-changes-between-current-branch-commit:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      api-change: ${{ steps.check-modified.outputs.api-change }}
      admin-change: ${{ steps.check-modified.outputs.admin-change }}
    steps:
      - uses: actions/checkout@v4
        # with:
        #   fetch-depth: 2 # 0 : 모든 히스토리, 1: 마지막 commit, 2: 마지막 2개 commit ...
        # Pr을 연상태에서 push를 하면 merge commit이 마지막 commit, push한 commit아 마지막에서 2번째로 잡힌다.
      - name: Get changed files
        id: changed-files-between-commit
        uses: tj-actions/changed-files@v44
        continue-on-error: true
        with:
          since_last_remote_commit: true
          files_yaml: |
            admin:
              - apps/admin/**

            api:
              - apps/api/**

            libs:
              - libs/**

    
      - name: Get changed file between pr branch
        if: failure() && steps.changed-files-between-commit.outcome == 'failure'
        id: changed-files-between-pr-branch
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: false
          files_yaml: |
            admin:
              - apps/admin/**

            api:
              - apps/api/**

            libs:
              - libs/**
          run: echo 'flag=true' >> $GITHUB_OUTPUT
  
      - name: Set run test flags
        id: check-modified
        env:
          LIBS_ANY_MODIFED: 'true'
          LIBS_ANY_MODIFIED_FILES: ${{ steps.changed-files-between-pr-branch.outputs.flag =='true'&& steps.changed-files-between-pr-branch.outputs.libs_any_modified_files || steps.changed-files-yaml.outputs.libs_any_modified_files }}
          API_ANY_MODIFIED: ${{ steps.changed-files-between-pr-branch.outputs.flag =='true'&& steps.changed-files-between-pr-branch.outputs.api_any_modified || steps.changed-files-yaml.outputs.api_any_modified }}
          API_ANY_MODIFIED_FILES: ${{ steps.changed-files-between-pr-branch.outputs.flag =='true'&& steps.changed-files-between-pr-branch.outputs.api_any_modified_files || steps.changed-files-yaml.outputs.api_any_modified_files }}
          ADMIN_ANY_MODIFIED: ${{ steps.changed-files-between-pr-branch.outputs.flag =='true'&& steps.changed-files-between-pr-branch.outputs.admin_any_modified || steps.changed-files-yaml.outputs.admin_any_modified }}
          ADMIN_ANY_MODIFIED_FILES: ${{ steps.changed-files-between-pr-branch.outputs.flag =='true'&& steps.changed-files-between-pr-branch.outputs.admin_any_modified_files || steps.changed-files-yaml.outputs.admin_any_modified_files }}
        run: |
          echo ${IBS_ANY_MODIFED}
          if [ $LIBS_ANY_MODIFED  == "true" ]; then
            echo 'api-change=true' >> $GITHUB_OUTPUT
            echo 'admin-chagne=true' >> $GITHUB_OUTPUT
            echo "List all the files that have changed: $LIBS_ANY_MODIFIED_FILES"
          elif [ $API_ANY_MODIFIED == "true" ]; then
            echo 'api-change=true' >> $GITHUB_OUTPUT
            echo "List all the files that have changed: $API_ANY_MODIFIED_FILES"
          elif [ $ADMIN_ANY_MODIFIED == "true" ]; then
            echo 'admin-change=true' >> $GITHUB_OUTPUT
            echo "List all the files that have changed: $ADMIN_ANY_MODIFIED_FILES"
          else
            echo "Nothing"
          fi

  test1:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [check-file-changes-between-current-branch-commit]
    if: needs.check-file-changes-between-current-branch-commit.outputs.check-modified.api == 'true'
    permissions:
      pull-requests: read
    outputs:
      api-change: ${{ steps.check-modified.outputs.api-change }}
      admin-change: ${{ steps.check-modified.outputs.admin-change }}
    steps:
      - uses: actions/checkout@v4
    
      - name: test1
        run: echo "test1"

  test2:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [check-file-changes-between-current-branch-commit]
    if: needs.check-file-changes-between-current-branch-commit.outputs.check-modified.api == 'true'
    permissions:
      pull-requests: read
    outputs:
      api-change: ${{ steps.check-modified.outputs.api-change }}
      admin-change: ${{ steps.check-modified.outputs.admin-change }}
    steps:
      - uses: actions/checkout@v4
    
      - name: test2
        run: echo "test2"